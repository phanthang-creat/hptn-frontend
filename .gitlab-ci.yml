variables:
  USER_PROJECT: "ptitweb"
  PATH_PROJECT: "/home/${USER_PROJECT}/${CI_PROJECT_NAME}"
  IMAGE_VERSION: "${CI_REGISTRY}/${USER_PROJECT}/${CI_PROJECT_NAME}:${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}.zip"
  CODECLIMATE_REPORT: "codeclimate_analysis_${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}_report"
  SNYKSCAN_REPORT: "snyk_scan_${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}_report"
  TRIVYFS_REPORT: "trivyfs_scan_${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}_report"
  TRIVY_IMAGE_REPORT: "security_scan_image_${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}_report"
  ARACHNI_WEBSITE_REPORT: "arachni_scan_website_${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}_report"
  K6_PERFORMACE_TEST_REPORT: "performace_test_${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}_report"
  ADDRESS_FRONTEND: "http://18.183.75.203/"

stages:
  - build
  - test source code
  - security scan image
  - push
  - deploy
  - security scan website
  - performace testing
  - send report

build:
  stage: build
  variables:
    GIT_STRATEGY: clone
  before_script:
    - sudo chown -R gitlab-runner:gitlab-runner /home/gitlab-runner/builds/
    - sudo chmod -R 755 /home/gitlab-runner/builds
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
  script:
    - docker build -t ${IMAGE_VERSION} .
  tags: 
    - ptit-web-runner-build-shell
  only:
    - tags 

test source code:
    stage: test source code
    variables:
        GIT_STRATEGY: clone
    script:
        - docker run --rm --env CODECLIMATE_CODE="$PWD" --volume "$PWD":/code --volume /var/run/docker.sock:/var/run/docker.sock --volume /tmp/cc:/tmp/cc codeclimate/codeclimate analyze -f html > ${CODECLIMATE_REPORT}.html
    tags:
        - ptit-web-runner-build-shell
    only:
        - tags
    artifacts:
        paths:
            - ${CODECLIMATE_REPORT}.html
        expire_in: 1 day

snykscan:
    stage: test source code
    variables:
        GIT_STRATEGY: clone
        SNYK_TOKEN: ${SNYK_AUTH_TOKEN}  # Thay "your_snyk_token" bằng token thực tế của bạn
    script:
        - docker build --rm --network host --build-arg SNYK_AUTH_TOKEN=$SNYK_TOKEN --build-arg OUTPUT_FILENAME=$SNYKSCAN_REPORT -t $SNYKSCAN_REPORT -f Dockerfile-snyk .
        - docker create --name $SNYKSCAN_REPORT $SNYKSCAN_REPORT
        - docker cp $SNYKSCAN_REPORT:/app/$SNYKSCAN_REPORT.html .
        - docker rm $SNYKSCAN_REPORT
    tags:
        - ptit-web-runner-build-shell
    only:
        - tags
    artifacts:
        paths:
        - $SNYKSCAN_REPORT.html
        expire_in: 1 day

trivyfs scan:
    stage: test source code
    variables:
        GIT_STRATEGY: clone
    script:
        - docker run --rm -v $PWD:/${CI_PROJECT_NAME} -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy fs /${CI_PROJECT_NAME} --severity HIGH,CRITICAL --format template --template "@contrib/html.tpl" --output /${CI_PROJECT_NAME}/$TRIVYFS_REPORT.html
        - sudo chown gitlab-runner:gitlab-runner $PWD/$TRIVYFS_REPORT.html 
    tags:
        - ptit-web-runner-build-shell
    only:
        - tags
    artifacts:
        paths:
        - ${TRIVYFS_REPORT}.html
        expire_in: 1 day

trivy scan image:
    stage: security scan image
    variables:
        GIT_STRATEGY: none
    script:
        - docker run --rm -v $(pwd):/${CI_PROJECT_NAME} -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image ${IMAGE_VERSION}
        - docker run --rm -v $(pwd):/${CI_PROJECT_NAME} -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image --format template --template "@contrib/html.tpl" --output /${CI_PROJECT_NAME}/${TRIVY_IMAGE_REPORT}.html $IMAGE_VERSION
    tags:
        - ptit-web-runner-build-shell
    only:
        - tags
    artifacts:
        paths:
        - ${TRIVY_IMAGE_REPORT}.html
        expire_in: 1 day

push:
  stage: push
  variables:
    GIT_STRATEGY: none
  before_script:
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
  script:
    - docker push ${IMAGE_VERSION}
  after_script:
    - docker logout ${CI_REGISTRY}
  tags: 
    - ptit-web-runner-build-shell
  only:
    - tags 

deploy: 
  stage: deploy
  variables:
    GIT_STRATEGY: none
  before_script:
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
  script:
    - docker pull ${IMAGE_VERSION}
    - sudo chmod 644 ${ENV_FILE}  # Đảm bảo quyền truy cập vào file env
    - sudo docker rm -f ${CI_PROJECT_NAME} || true  # Xóa container cũ nếu có, bỏ qua nếu không có
    - sudo docker run --name ${CI_PROJECT_NAME} --env-file ${ENV_FILE} -dp ${FE_PORT} ${IMAGE_VERSION}  # Chạy với quyền sudo
  after_script:
    - docker logout ${CI_REGISTRY}
  tags: 
    - ptit-web-runner-dev-shell
  only:
    - tags

security scan website:
  stage: security scan website
  variables:
    GIT_STRATEGY: none
  script:
    - docker run --rm -v /tmp/:/tmp/ duythienlnt/arachni:v1.4-0.5.10 bin/arachni --output-verbose --scope-include-subdomains $ADDRESS_FRONTEND  --report-save-path=/tmp/$ARACHNI_WEBSITE_REPORT.afr > /dev/null 2>&1
    - docker run --rm -v /tmp/:/tmp/ duythienlnt/arachni:v1.4-0.5.10 bin/arachni_reporter /tmp/$ARACHNI_WEBSITE_REPORT.afr --report=html:outfile=/tmp/$ARACHNI_WEBSITE_REPORT.zip
    - sudo chmod 777 /tmp/$ARACHNI_WEBSITE_REPORT.zip
    - cp /tmp/$ARACHNI_WEBSITE_REPORT.zip .
  tags:
    - ptit-web-runner-build-shell
  only:
    - tags
  artifacts:
    paths:
      - $ARACHNI_WEBSITE_REPORT.zip
    expire_in: 1 day

performace testing:
    stage: performace testing
    variables:
        GIT_STRATEGY: clone
    script:
        - chmod -R 777 ./performace_testing_script/
        - docker run --rm -v $(pwd)/performace_testing_script:/performace_testing_script loadimpact/k6 run /performace_testing_script/smoke-test.js
        - mv ./performace_testing_script/summary.html $(pwd)/$K6_PERFORMACE_TEST_REPORT.html
    after_script:
        - sudo chown -R gitlab-runner $(pwd)
    tags:
        - ptit-web-runner-build-shell
    only:
        - tags
    artifacts:
        paths:
        - $K6_PERFORMACE_TEST_REPORT.html
        expire_in: 1 day

send report:
  stage: send report
  variables:
      GIT_STRATEGY: none
  script:
      - ls -l $(pwd)/${CODECLIMATE_REPORT}.html
      - ls -l $(pwd)/${SNYKSCAN_REPORT}.html
      - ls -l $(pwd)/${TRIVY_IMAGE_REPORT}.html
      - ls -l $(pwd)/${TRIVYFS_REPORT}.html
      - ls -l $(pwd)/${K6_PERFORMACE_TEST_REPORT}.html
      - ls -l $(pwd)/${ARACHNI_WEBSITE_REPORT}.zip
      - "curl -F \"chat_id=-4266590085\" -F 'media=[{\"type\": \"document\", \"media\": \"attach://file1\"}, {\"type\": \"document\", \"media\": \"attach://file2\"}, {\"type\": \"document\", \"media\": \"attach://file3\"}, {\"type\": \"document\", \"media\": \"attach://file4\"}, {\"type\": \"document\", \"media\": \"attach://file5\"}, {\"type\": \"document\", \"media\": \"attach://file6\"}]' -F \"file1=@$(pwd)/${CODECLIMATE_REPORT}.html\" -F \"file2=@$(pwd)/${SNYKSCAN_REPORT}.html\" -F \"file3=@$(pwd)/${TRIVY_IMAGE_REPORT}.html\" -F \"file4=@$(pwd)/${TRIVYFS_REPORT}.html\" -F \"file5=@$(pwd)/${K6_PERFORMACE_TEST_REPORT}.html\" -F \"file6=@$(pwd)/${ARACHNI_WEBSITE_REPORT}.zip\" \"https://api.telegram.org/bot7498835323:AAHVv9n5TXBWRwS1ne2q-EKZTtlUzujpXoI/sendMediaGroup\""
  tags:
      - ptit-web-runner-build-shell
  only:
      - tags
